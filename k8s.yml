apiVersion: apps/v1
kind: Deployment
metadata:
    name: spring-boot-kubernetes
    labels:
      app: spring-boot-kubernetes
      version: v1.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-boot-kubernetes
      version: v1.0.0
  template:
    metadata:
      labels:
        app: spring-boot-kubernetes
        version: v1.0.0
    spec:
      serviceAccountName: spring-boot-kubernetes
      containers:        
        - name: spring-boot-kubernetes
          image: darqko/spring-boot-kubernetes:v1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
#          readinessProbe:
#            httpGet:
#              path: /actuator/health
#              port: 8080
#            initialDelaySeconds: 60
#            timeoutSeconds: 15
#            periodSeconds: 30
#          livenessProbe:
#            httpGet:
#              path: /actuator/health
#              port: 8080
#            initialDelaySeconds: 60
#            timeoutSeconds: 15
#            periodSeconds: 60
          resources:
            requests:
              memory: 256Mi
              cpu: 500m
            limits:
              memory: 512Mi
              cpu: 500m
          
---
apiVersion: v1
kind: Service
metadata:
    name: spring-boot-kubernetes
    labels:
      app: spring-boot-kubernetes
      service: spring-boot-kubernetes
spec:
  ports:
    - port: 8080
      name: http
  selector:
    app: spring-boot-kubernetes

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spring-boot-kubernetes
  labels:
    account: spring-boot-kubernetes
    
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: spring-boot-kubernetes  
data:
  application.yml: |-
    server:
      port: 8080    
    timeout: 100
    application: 
      id: SKELETON_MS
      type: X
      client:
        protocol: http #No Cambiar
        host: localhost #Cambiar por el host de kubernetes
        port: 8080 #Cambiar solo en caso de pruebas en local
        basePath: /  #Endpoint Cliente
        url: ${application.client.protocol}://${application.client.host}:${application.client.port}${application.client.basePath}
    management:
      endpoints:
        web:
          exposure:
            include: info,refresh,keepalive,health    
--- 

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: namespace-reader
rules:
  - apiGroups: [""]
    resources: ["configmaps", "pods", "services", "endpoints", "secrets"]
    verbs: ["get", "list", "watch"]

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: namespace-reader-binding
subjects:
- kind: ServiceAccount
  name: spring-boot-kubernetes
roleRef:
  kind: Role
  name: namespace-reader
  apiGroup: ""      